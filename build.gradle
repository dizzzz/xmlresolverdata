plugins {
  id 'com.nwalsh.gradle.saxon.saxon-gradle' version '0.9.3'
  id 'com.nwalsh.gradle.relaxng.validate' version '0.0.6'
}

defaultTasks 'dist'

import com.nwalsh.gradle.saxon.SaxonXsltTask
import com.nwalsh.gradle.relaxng.validate.RelaxNGValidateTask

def FS = System.getProperty("file.separator");

task copy_data(type: Copy) {
  into "${buildDir}/xmlresolverdata-${version}"
  from ("${projectDir}/src/data") {
    exclude "manifest.xml"
  }
}

task make_data_catalog(type: SaxonXsltTask, dependsOn: ["copy_data"]) {
  input "${projectDir}/src/data/manifest.xml"
  output "${buildDir}/xmlresolverdata-${version}/catalog.xml"
  outputs.file "${buildDir}/xmlresolverdata-${version}/cat-entities.xml"
  outputs.file "${buildDir}/xmlresolverdata-${version}/cat-mathml2.xml"
  outputs.file "${buildDir}/xmlresolverdata-${version}/cat-mathml3.xml"
  outputs.file "${buildDir}/xmlresolverdata-${version}/cat-rddl.xml"
  outputs.file "${buildDir}/xmlresolverdata-${version}/cat-svg.xml"
  outputs.file "${buildDir}/xmlresolverdata-${version}/cat-xhtml.xml"
  stylesheet "${projectDir}/tools/make-catalog.xsl"
}

task validate(dependsOn: ["make_data_catalog"]) {
  // just some place to hang dependencies
}

make_data_catalog.outputs.files.each { xml ->
  def fn = xml.toString()
  def pos = fn.lastIndexOf(FS)
  fn = fn.substring(pos+1)
  Task t = project.task("validate_${fn}", type: RelaxNGValidateTask) {
    dependsOn "make_data_catalog"
    input xml
    output "${buildDir}/validated/${fn}"
    schema "${projectDir}/src/data/xmlcatalogs.org/schema/1.1/catalog.rng"
  }
  validate.dependsOn(t)
}

task copyNotices(type: Copy) {
  from "${projectDir}/src/notices"
  into "${buildDir}/xmlresolverdata-${version}/notices"
}

task dist(type: Zip, dependsOn: ["make_data_catalog", "validate", "copyNotices"]) {
  from("$buildDir")
  exclude(["dist", "validated"])
  destinationDirectory = file("${buildDir}/dist")
  archiveFileName = "xmlresolverdata-${relVersion}.zip"
}
